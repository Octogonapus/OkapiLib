dist: trusty

cache: packages

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: "ppa:team-gcc-arm-embedded/ppa"
            - ubuntu-toolchain-r-test
          packages:
            - lib32z1
            - lib32ncurses5
            - lib32bz2-1.0
            - gcc-arm-embedded
            - g++-7
            - lcov
            - valgrind
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

language: cpp
compiler: gcc

before_install:
  - eval "${MATRIX_EVAL}"

script:
  - make # run the cross-compiler
  - mkdir cmake-build-debug
  - cd cmake-build-debug
  - cmake -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - Unix Makefiles" .. # .. is now the source dir
  - cmake --build . --target OkapiLibV5 -- -j 2 # . is the build dir
  - ./OkapiLibV5
  - valgrind --tool=memcheck --leak-check=full --leak-resolution=med --show-leak-kinds=all --undef-value-errors=yes --track-origins=yes  --error-exitcode=1 --show-reachable=no ./OkapiLibV5 # --expensive-definedness-checks=yes
  - valgrind --tool=massif --stacks=yes --time-unit=B --massif-out-file=massif.out.txt ./OkapiLibV5
  - ms_print massif.out.txt

after_success:
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info # debug info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
